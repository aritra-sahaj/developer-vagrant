#!/bin/bash

set -Eeuo pipefail

# shellcheck source=${HOME}/workspace/developer-vagrant/scripts/qssh-generic-functions
source "$( dirname "${BASH_SOURCE[0]}" )/qssh-generic-functions"
# shellcheck source=${HOME}/workspace/developer-vagrant/scripts/qssh-override-functions
source "$( dirname "${BASH_SOURCE[0]}" )/qssh-override-functions"

all_instances_details ALL_INSTANCES_DETAILS

filter_instances_details TARGET_INSTANCES_DETAILS "${ALL_INSTANCES_DETAILS}" "${@}"
empty_check "${TARGET_INSTANCES_DETAILS}" "No target instances found"
print_batch_confirmation "${TARGET_INSTANCES_DETAILS}" "Copy files onto below instances"

capture_argument FILE_PATH_ON_HOST "Path of file on host"
capture_argument FILE_PATH_ON_TARGET "Path of file on target"

for INSTANCE_DETAILS in $(echo -n "${TARGET_INSTANCES_DETAILS}" | jq -c '.[]' | sed 's| |SPACE|g'); do
  set_instance_details_in_vars TARGET_IP TARGET_KEY TARGET_USER TARGET_VPC USE_BASTION "${INSTANCE_DETAILS}"
  newline
  echo "copying ${FILE_PATH_ON_HOST} to ${FILE_PATH_ON_TARGET} on ${TARGET_IP}"
  if [[ "${USE_BASTION}" == "y" ]]; then
    choose_bastion BASTION_IP BASTION_KEY BASTION_USER "${ALL_INSTANCES_DETAILS}" "${TARGET_VPC}"
    scp -q -o StrictHostKeyChecking=no \
      -o ProxyCommand="ssh -q -o StrictHostKeyChecking=no -i ${BASTION_KEY} ${BASTION_USER}@${BASTION_IP} -W %h:%p" \
      -i "${TARGET_KEY}" "${FILE_PATH_ON_HOST}" "${TARGET_USER}@${TARGET_IP}:${FILE_PATH_ON_TARGET}"
    unset BASTION_IP BASTION_KEY BASTION_USER
  else
    scp -q -o StrictHostKeyChecking=no \
      -i "${TARGET_KEY}" "${FILE_PATH_ON_HOST}" "${TARGET_USER}@${TARGET_IP}:${FILE_PATH_ON_TARGET}"
  fi
  unset TARGET_IP TARGET_KEY TARGET_USER TARGET_VPC USE_BASTION
done