#!/bin/bash

set -Eeuo pipefail

# shellcheck source=${HOME}/workspace/developer-vagrant/scripts/qssh-generic-functions
source "$( dirname "${BASH_SOURCE[0]}" )/qssh-generic-functions"
# shellcheck source=${HOME}/workspace/developer-vagrant/scripts/qssh-override-functions
source "$( dirname "${BASH_SOURCE[0]}" )/qssh-override-functions"

all_instances_details ALL_INSTANCES_DETAILS

filter_instances_details TARGET_INSTANCES_DETAILS "${ALL_INSTANCES_DETAILS}" "${@}"
empty_check "${TARGET_INSTANCES_DETAILS}" "No target instances found"
select_and_set_instance_details_in_vars TARGET_IP TARGET_KEY TARGET_USER TARGET_VPC USE_BASTION SSH_PASS_COMMAND \
  SSH_PASS_ARG SSH_KEY_ARG "${TARGET_INSTANCES_DETAILS}" "target" "onto"

if [[ "${USE_BASTION}" == "y" ]]; then
  choose_bastion BASTION_IP BASTION_KEY BASTION_USER BASTION_SSH_PASS_COMMAND BASTION_SSH_PASS_ARG BASTION_SSH_KEY_ARG \
    "${ALL_INSTANCES_DETAILS}" "${TARGET_VPC}"
  newline
  ${SSH_PASS_COMMAND} ${SSH_PASS_ARG} ssh -q -o StrictHostKeyChecking=no \
    -o ProxyCommand="${BASTION_SSH_PASS_COMMAND} ${BASTION_SSH_PASS_ARG} ssh -q -o StrictHostKeyChecking=no ${BASTION_SSH_KEY_ARG} ${BASTION_KEY} ${BASTION_USER}@${BASTION_IP} -W %h:%p" \
    ${SSH_KEY_ARG} ${TARGET_KEY} "${TARGET_USER}@${TARGET_IP}"
else
  newline
  ${SSH_PASS_COMMAND} ${SSH_PASS_ARG} ssh -q -o StrictHostKeyChecking=no \
    ${SSH_KEY_ARG} ${TARGET_KEY} "${TARGET_USER}@${TARGET_IP}"
fi